var _templateObject = _taggedTemplateLiteralLoose(['\n  margin-right: ', ';\n'], ['\n  margin-right: ', ';\n']);

function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }

import React from 'react';
import PropTypes from 'prop-types';
import ResponsiveNavbar from '@opuscapita/react-responsive-navbar';
// App imports
import { classPrefix, theme } from '../constants';
import * as Primitive from '../primitives';

var ProductTitle = Primitive.Title.extend(_templateObject, theme.gutterWidth);

var HeaderNavigation = function HeaderNavigation(_ref) {
  var onSelect = _ref.onSelect,
      title = _ref.title,
      list = _ref.list,
      activeKey = _ref.activeKey,
      showNavItemBorder = _ref.showNavItemBorder,
      showNavItemTooltip = _ref.showNavItemTooltip;
  return (// eslint-disable-line
    React.createElement(
      Primitive.Header,
      { className: classPrefix + '_product-header' },
      title && React.createElement(
        ProductTitle,
        null,
        title
      ),
      !!list.length && React.createElement(ResponsiveNavbar, {
        activeKey: activeKey,
        list: list,
        showNavItemBorder: showNavItemBorder,
        showNavItemTooltip: showNavItemTooltip,
        onSelect: onSelect
      })
    )
  );
};

HeaderNavigation.defaultProps = {
  title: null,
  activeKey: 0,
  list: [],
  showNavItemBorder: false,
  showNavItemTooltip: true,
  onSelect: null
};

export default HeaderNavigation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9oZWFkZXIvaGVhZGVyLXRhYi1uYXZpZ2F0aW9uLmNvbXBvbmVudC5qc3giXSwibmFtZXMiOlsiUmVhY3QiLCJQcm9wVHlwZXMiLCJSZXNwb25zaXZlTmF2YmFyIiwiY2xhc3NQcmVmaXgiLCJ0aGVtZSIsIlByaW1pdGl2ZSIsIlByb2R1Y3RUaXRsZSIsIlRpdGxlIiwiZXh0ZW5kIiwiZ3V0dGVyV2lkdGgiLCJIZWFkZXJOYXZpZ2F0aW9uIiwib25TZWxlY3QiLCJ0aXRsZSIsImxpc3QiLCJhY3RpdmVLZXkiLCJzaG93TmF2SXRlbUJvcmRlciIsInNob3dOYXZJdGVtVG9vbHRpcCIsImxlbmd0aCIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsZ0JBQVAsTUFBNkIscUNBQTdCO0FBQ0E7QUFDQSxTQUFTQyxXQUFULEVBQXNCQyxLQUF0QixRQUFtQyxjQUFuQztBQUNBLE9BQU8sS0FBS0MsU0FBWixNQUEyQixlQUEzQjs7QUFFQSxJQUFNQyxlQUFlRCxVQUFVRSxLQUFWLENBQWdCQyxNQUEvQixrQkFDWUosTUFBTUssV0FEbEIsQ0FBTjs7QUFJQSxJQUFNQyxtQkFBbUIsU0FBbkJBLGdCQUFtQjtBQUFBLE1BQUdDLFFBQUgsUUFBR0EsUUFBSDtBQUFBLE1BQWFDLEtBQWIsUUFBYUEsS0FBYjtBQUFBLE1BQW9CQyxJQUFwQixRQUFvQkEsSUFBcEI7QUFBQSxNQUEwQkMsU0FBMUIsUUFBMEJBLFNBQTFCO0FBQUEsTUFBcUNDLGlCQUFyQyxRQUFxQ0EsaUJBQXJDO0FBQUEsTUFBd0RDLGtCQUF4RCxRQUF3REEsa0JBQXhEO0FBQUEsU0FBbUY7QUFDMUc7QUFBQyxlQUFELENBQVcsTUFBWDtBQUFBLFFBQWtCLFdBQWNiLFdBQWQsb0JBQWxCO0FBQ0dTLGVBQVM7QUFBQyxvQkFBRDtBQUFBO0FBQWVBO0FBQWYsT0FEWjtBQUVHLE9BQUMsQ0FBQ0MsS0FBS0ksTUFBUCxJQUNELG9CQUFDLGdCQUFEO0FBQ0UsbUJBQVdILFNBRGI7QUFFRSxjQUFNRCxJQUZSO0FBR0UsMkJBQW1CRSxpQkFIckI7QUFJRSw0QkFBb0JDLGtCQUp0QjtBQUtFLGtCQUFVTDtBQUxaO0FBSEY7QUFEdUI7QUFBQSxDQUF6Qjs7QUF1QkFELGlCQUFpQlEsWUFBakIsR0FBZ0M7QUFDOUJOLFNBQU8sSUFEdUI7QUFFOUJFLGFBQVcsQ0FGbUI7QUFHOUJELFFBQU0sRUFId0I7QUFJOUJFLHFCQUFtQixLQUpXO0FBSzlCQyxzQkFBb0IsSUFMVTtBQU05QkwsWUFBVTtBQU5vQixDQUFoQzs7QUFTQSxlQUFlRCxnQkFBZiIsImZpbGUiOiJoZWFkZXItdGFiLW5hdmlnYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVzcG9uc2l2ZU5hdmJhciBmcm9tICdAb3B1c2NhcGl0YS9yZWFjdC1yZXNwb25zaXZlLW5hdmJhcic7XG4vLyBBcHAgaW1wb3J0c1xuaW1wb3J0IHsgY2xhc3NQcmVmaXgsIHRoZW1lIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcbmltcG9ydCAqIGFzIFByaW1pdGl2ZSBmcm9tICcuLi9wcmltaXRpdmVzJztcblxuY29uc3QgUHJvZHVjdFRpdGxlID0gUHJpbWl0aXZlLlRpdGxlLmV4dGVuZGBcbiAgbWFyZ2luLXJpZ2h0OiAke3RoZW1lLmd1dHRlcldpZHRofTtcbmA7XG5cbmNvbnN0IEhlYWRlck5hdmlnYXRpb24gPSAoeyBvblNlbGVjdCwgdGl0bGUsIGxpc3QsIGFjdGl2ZUtleSwgc2hvd05hdkl0ZW1Cb3JkZXIsIHNob3dOYXZJdGVtVG9vbHRpcCB9KSA9PiAoIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgPFByaW1pdGl2ZS5IZWFkZXIgY2xhc3NOYW1lPXtgJHtjbGFzc1ByZWZpeH1fcHJvZHVjdC1oZWFkZXJgfT5cbiAgICB7dGl0bGUgJiYgPFByb2R1Y3RUaXRsZT57dGl0bGV9PC9Qcm9kdWN0VGl0bGU+fVxuICAgIHshIWxpc3QubGVuZ3RoICYmXG4gICAgPFJlc3BvbnNpdmVOYXZiYXJcbiAgICAgIGFjdGl2ZUtleT17YWN0aXZlS2V5fVxuICAgICAgbGlzdD17bGlzdH1cbiAgICAgIHNob3dOYXZJdGVtQm9yZGVyPXtzaG93TmF2SXRlbUJvcmRlcn1cbiAgICAgIHNob3dOYXZJdGVtVG9vbHRpcD17c2hvd05hdkl0ZW1Ub29sdGlwfVxuICAgICAgb25TZWxlY3Q9e29uU2VsZWN0fVxuICAgIC8+fVxuICA8L1ByaW1pdGl2ZS5IZWFkZXI+XG4pO1xuXG5IZWFkZXJOYXZpZ2F0aW9uLnByb3BUeXBlcyA9IHtcbiAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGFjdGl2ZUtleTogUHJvcFR5cGVzLm51bWJlcixcbiAgbGlzdDogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnNoYXBlKHt9KSksXG4gIHNob3dOYXZJdGVtQm9yZGVyOiBQcm9wVHlwZXMuYm9vbCxcbiAgc2hvd05hdkl0ZW1Ub29sdGlwOiBQcm9wVHlwZXMuYm9vbCxcbiAgb25TZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxufTtcblxuSGVhZGVyTmF2aWdhdGlvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIHRpdGxlOiBudWxsLFxuICBhY3RpdmVLZXk6IDAsXG4gIGxpc3Q6IFtdLFxuICBzaG93TmF2SXRlbUJvcmRlcjogZmFsc2UsXG4gIHNob3dOYXZJdGVtVG9vbHRpcDogdHJ1ZSxcbiAgb25TZWxlY3Q6IG51bGwsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBIZWFkZXJOYXZpZ2F0aW9uO1xuIl19