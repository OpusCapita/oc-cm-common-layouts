var _templateObject = _taggedTemplateLiteralLoose(['\n  margin-right: ', ';\n'], ['\n  margin-right: ', ';\n']);

function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }

import React from 'react';
import PropTypes from 'prop-types';
import ResponsiveNavbar from '@opuscapita/react-responsive-navbar';
// App imports
import { classPrefix, theme } from '../constants';
import { PrimitiveHeader, PrimitiveHeaderTitle } from '../primitives';

var ProductTitle = PrimitiveHeaderTitle.extend(_templateObject, theme.gutterWidth);

var LayoutTabNavigationHeader = function LayoutTabNavigationHeader(_ref) {
  var onSelect = _ref.onSelect,
      title = _ref.title,
      list = _ref.list,
      activeKey = _ref.activeKey,
      showNavItemBorder = _ref.showNavItemBorder,
      showNavItemTooltip = _ref.showNavItemTooltip;
  return (// eslint-disable-line
    React.createElement(
      PrimitiveHeader,
      { className: classPrefix + '_product-header' },
      title && React.createElement(
        ProductTitle,
        null,
        title
      ),
      !!list.length && React.createElement(ResponsiveNavbar, {
        activeKey: activeKey,
        list: list,
        showNavItemBorder: showNavItemBorder,
        showNavItemTooltip: showNavItemTooltip,
        onSelect: onSelect
      })
    )
  );
};

LayoutTabNavigationHeader.defaultProps = {
  title: null,
  activeKey: 0,
  list: [],
  showNavItemBorder: false,
  showNavItemTooltip: true,
  onSelect: null
};

export default LayoutTabNavigationHeader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9oZWFkZXIvbGF5b3V0LXRhYi1uYXZpZ2F0aW9uLWhlYWRlci5jb21wb25lbnQuanN4Il0sIm5hbWVzIjpbIlJlYWN0IiwiUHJvcFR5cGVzIiwiUmVzcG9uc2l2ZU5hdmJhciIsImNsYXNzUHJlZml4IiwidGhlbWUiLCJQcmltaXRpdmVIZWFkZXIiLCJQcmltaXRpdmVIZWFkZXJUaXRsZSIsIlByb2R1Y3RUaXRsZSIsImV4dGVuZCIsImd1dHRlcldpZHRoIiwiTGF5b3V0VGFiTmF2aWdhdGlvbkhlYWRlciIsIm9uU2VsZWN0IiwidGl0bGUiLCJsaXN0IiwiYWN0aXZlS2V5Iiwic2hvd05hdkl0ZW1Cb3JkZXIiLCJzaG93TmF2SXRlbVRvb2x0aXAiLCJsZW5ndGgiLCJkZWZhdWx0UHJvcHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPQSxLQUFQLE1BQWtCLE9BQWxCO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLE9BQU9DLGdCQUFQLE1BQTZCLHFDQUE3QjtBQUNBO0FBQ0EsU0FBU0MsV0FBVCxFQUFzQkMsS0FBdEIsUUFBbUMsY0FBbkM7QUFDQSxTQUFTQyxlQUFULEVBQTBCQyxvQkFBMUIsUUFBc0QsZUFBdEQ7O0FBRUEsSUFBTUMsZUFBZUQscUJBQXFCRSxNQUFwQyxrQkFDWUosTUFBTUssV0FEbEIsQ0FBTjs7QUFJQSxJQUFNQyw0QkFBNEIsU0FBNUJBLHlCQUE0QjtBQUFBLE1BQUdDLFFBQUgsUUFBR0EsUUFBSDtBQUFBLE1BQWFDLEtBQWIsUUFBYUEsS0FBYjtBQUFBLE1BQW9CQyxJQUFwQixRQUFvQkEsSUFBcEI7QUFBQSxNQUEwQkMsU0FBMUIsUUFBMEJBLFNBQTFCO0FBQUEsTUFBcUNDLGlCQUFyQyxRQUFxQ0EsaUJBQXJDO0FBQUEsTUFBd0RDLGtCQUF4RCxRQUF3REEsa0JBQXhEO0FBQUEsU0FBbUY7QUFDbkg7QUFBQyxxQkFBRDtBQUFBLFFBQWlCLFdBQWNiLFdBQWQsb0JBQWpCO0FBQ0dTLGVBQVM7QUFBQyxvQkFBRDtBQUFBO0FBQWVBO0FBQWYsT0FEWjtBQUVHLE9BQUMsQ0FBQ0MsS0FBS0ksTUFBUCxJQUNELG9CQUFDLGdCQUFEO0FBQ0UsbUJBQVdILFNBRGI7QUFFRSxjQUFNRCxJQUZSO0FBR0UsMkJBQW1CRSxpQkFIckI7QUFJRSw0QkFBb0JDLGtCQUp0QjtBQUtFLGtCQUFVTDtBQUxaO0FBSEY7QUFEZ0M7QUFBQSxDQUFsQzs7QUF1QkFELDBCQUEwQlEsWUFBMUIsR0FBeUM7QUFDdkNOLFNBQU8sSUFEZ0M7QUFFdkNFLGFBQVcsQ0FGNEI7QUFHdkNELFFBQU0sRUFIaUM7QUFJdkNFLHFCQUFtQixLQUpvQjtBQUt2Q0Msc0JBQW9CLElBTG1CO0FBTXZDTCxZQUFVO0FBTjZCLENBQXpDOztBQVNBLGVBQWVELHlCQUFmIiwiZmlsZSI6ImxheW91dC10YWItbmF2aWdhdGlvbi1oZWFkZXIuY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVzcG9uc2l2ZU5hdmJhciBmcm9tICdAb3B1c2NhcGl0YS9yZWFjdC1yZXNwb25zaXZlLW5hdmJhcic7XG4vLyBBcHAgaW1wb3J0c1xuaW1wb3J0IHsgY2xhc3NQcmVmaXgsIHRoZW1lIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcbmltcG9ydCB7IFByaW1pdGl2ZUhlYWRlciwgUHJpbWl0aXZlSGVhZGVyVGl0bGUgfSBmcm9tICcuLi9wcmltaXRpdmVzJztcblxuY29uc3QgUHJvZHVjdFRpdGxlID0gUHJpbWl0aXZlSGVhZGVyVGl0bGUuZXh0ZW5kYFxuICBtYXJnaW4tcmlnaHQ6ICR7dGhlbWUuZ3V0dGVyV2lkdGh9O1xuYDtcblxuY29uc3QgTGF5b3V0VGFiTmF2aWdhdGlvbkhlYWRlciA9ICh7IG9uU2VsZWN0LCB0aXRsZSwgbGlzdCwgYWN0aXZlS2V5LCBzaG93TmF2SXRlbUJvcmRlciwgc2hvd05hdkl0ZW1Ub29sdGlwIH0pID0+ICggLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICA8UHJpbWl0aXZlSGVhZGVyIGNsYXNzTmFtZT17YCR7Y2xhc3NQcmVmaXh9X3Byb2R1Y3QtaGVhZGVyYH0+XG4gICAge3RpdGxlICYmIDxQcm9kdWN0VGl0bGU+e3RpdGxlfTwvUHJvZHVjdFRpdGxlPn1cbiAgICB7ISFsaXN0Lmxlbmd0aCAmJlxuICAgIDxSZXNwb25zaXZlTmF2YmFyXG4gICAgICBhY3RpdmVLZXk9e2FjdGl2ZUtleX1cbiAgICAgIGxpc3Q9e2xpc3R9XG4gICAgICBzaG93TmF2SXRlbUJvcmRlcj17c2hvd05hdkl0ZW1Cb3JkZXJ9XG4gICAgICBzaG93TmF2SXRlbVRvb2x0aXA9e3Nob3dOYXZJdGVtVG9vbHRpcH1cbiAgICAgIG9uU2VsZWN0PXtvblNlbGVjdH1cbiAgICAvPn1cbiAgPC9QcmltaXRpdmVIZWFkZXI+XG4pO1xuXG5MYXlvdXRUYWJOYXZpZ2F0aW9uSGVhZGVyLnByb3BUeXBlcyA9IHtcbiAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGFjdGl2ZUtleTogUHJvcFR5cGVzLm51bWJlcixcbiAgbGlzdDogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnNoYXBlKHt9KSksXG4gIHNob3dOYXZJdGVtQm9yZGVyOiBQcm9wVHlwZXMuYm9vbCxcbiAgc2hvd05hdkl0ZW1Ub29sdGlwOiBQcm9wVHlwZXMuYm9vbCxcbiAgb25TZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxufTtcblxuTGF5b3V0VGFiTmF2aWdhdGlvbkhlYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIHRpdGxlOiBudWxsLFxuICBhY3RpdmVLZXk6IDAsXG4gIGxpc3Q6IFtdLFxuICBzaG93TmF2SXRlbUJvcmRlcjogZmFsc2UsXG4gIHNob3dOYXZJdGVtVG9vbHRpcDogdHJ1ZSxcbiAgb25TZWxlY3Q6IG51bGwsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBMYXlvdXRUYWJOYXZpZ2F0aW9uSGVhZGVyO1xuIl19